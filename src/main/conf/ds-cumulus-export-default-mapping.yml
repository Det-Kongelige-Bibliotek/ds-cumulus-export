# Field mapping and conversion configuration. Place the file as "ds-cumulus-export-default-mapping.yml"
# on the classpath or in user.home.

# Shared attributes for converters are
# source:       The Cumulus field to extract metadata from.
# sourceType:   The type of Cumulus field to extract metadata from.
#               If "string" is used, the metadata getter tries to deliver a String independent
#               of the Cumulus type (integers will be deliveres as Strings etc.).
#               Possible values are "string" and "assetReference", with "string" as default.
# dest:         The Solr field to store the converted metadata to.
# destFallback: If the metadata could not be processed (illegal date or similar), it is stored to
#               this field instead of the dest field.
# destType:     The Solr field type, which also selects the Converter-implementation to use.
#               The number of destTypes is expected to be expanded.
#               Current possible values are "string", "datetime" and "datetimeRange", with "string" as default.
# required:     If true, the source MUST be present in the Cumulus record for the conversion of the record to pass.
#               Possible values are true and false, with false as default.
# lineBreakIsMulti: If true, the values delivered by a Converter are splint on newline and each line added separately.
#               This reflects the way that most Cumulus fields handle multiple values, as Cumulus has no explicit
#               support for multi valued fields. Comment- or note-fields in Cumulus are an exception to this.
#               Possible values are true and false, with true as default.
#
# Special attributes for the string converter are
# pattern:      A regular expression, which must match the source metadata before it is stored in dest.
# replacement:  Requires pattern to be defined. Used with Java Matcher.replaceAll.
#               See https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/regex/Matcher.html#replaceAll(java.lang.String)
#               $0 refers to the full match while $1, $2, ..., $n refers to matching groups.
#     Example: pattern="[^0-9]*([0-9]{4}).*", replacement="Scanned anno $1"
#     will extract the first 4 consecutive digits in the input and output "Scanned anno YYYY".
digisam:
  maps:
    default:
      converters:
        - source: "guid"  # COP: N/A
          dest: "id"
          required: true
          # Uid:dk:kb:doms:2007-01/b29e6d60-717e-11e0-82d7-002185371280
          pattern: ".+([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})"
          # ds_billedsamling_b29e6d60-717e-11e0-82d7-002185371280
          replacement: "ds_billedsamling_$1"

        - source: "Titel"  # COP: Titel
          dest: "title"

        - source: "Item Creation Date"  # COP: N/A
          dest: "created_date"
          destType: "datetime"
          destFallback: "created_date_verbatim"

        - source: "År"  # COP: Oprindelsesdato
          dest: "datetime"
          destType: "datetimeRange"
          destFallback: "datetime_verbatim"

        - source: "Categories"  # COP: "Indgår i"/"Is part of", this is presented as a link
          dest: "keyword"  # New dest?
#          dest_type: url  How to retrieve this? (hover over in Cumulus shows part of the link)

        - source: "Emneord"  # COP: N/A
          dest: "subject"

        - source: "Ophav"  # COP: Ophav (Known to change format, related to "Person")
          dest: "author"

        - source: "Copyright"  # COP: Ophavsret
          dest: "license"

        - source: "Copyright Notice"  # COP: Ophavsret (added to field above)
          dest: "license_notice"

        - source: "Asset Reference"  # COP: N/A
          dest: "image"

        - source: "Renditions Manager"
          sourceType: "assetReference"
          dest: "image_preview"
          destType: "url"
          pattern: "^.*:/Depot/DAMJP2/(.*).jp2"
          replacement: "https://kb-images.kb.dk/DAMJP2/$1/full/!345,2555/0/native.jpg"
          verifyPattern: "^https?(.+)" # There is a problem with the certificate so we use plain HTTP
          verifyReplacement: "http$1"
          required: true

        - source: "Renditions Manager"
          sourceType: "assetReference"
          dest: "image_full"
          destType: "url"
          verifyURL: false # We already did this for image_preview
          pattern: "^.*:/Depot/DAMJP2/(.*).jp2"
          replacement: "https://kb-images.kb.dk/DAMJP2/$1/full/full/0/default.jpg"
          lineBreakIsMulti: false

        - source: "Renditions Manager"
          sourceType: "assetReference"
          dest: "iiif"
          destType: "url"
          verifyURL: false # We already did this for image_preview
          pattern: "^.*:/Depot/DAMJP2/(.*).jp2"
          replacement: "https://kb-images.kb.dk/DAMJP2/$1/"
          lineBreakIsMulti: false

        - source: "Horizontal Pixels"  # COP: part of Dimension (H x V)
          dest: "width_pixels"
          destType: "long"

        - source: "Vertical Pixels"  # COP: part of Dimension (H x V)
          dest: "height_pixels"
          destType: "long"

        - source: "Record Name"  # COP: Id
          dest: "record_name"

        - source: "Materialebetegnelse"  # COP: Ressourcetype 1 (If missing: Generel materialebetegnelse below is shown)
          dest: "material_1"

        - source: "Generel materialebetegnelse"  # COP: Ressourcetype 2
          dest: "material_2"

        - source: "Opstilling"  # COP: Opstilling
          dest: "archive" # Better tag needed (shelf_mark?)

        - source: "Lokalitet"  # COP: Lokalitet
          dest: "location"

        - source: "Accessionsnr"  # COP: Accessionsnummer
          dest: "accession_number"

        - source: "Keywords"  # COP: Emne
          dest: "topic"  # or replace keyword?

        - source: "Note"  # COP: Kommentar
          dest: "note"

        - source: "Person" # COP: Person (Known to change format, related to "Ophav")
          dest: "person"

        - source: "URL"  # COP: Relateret (The link to main page for pictures)
          dest: "related_url"
          destType: "url"
          pattern: "http://www.kb.dk/(.*)"
          replacement: "http://www5.kb.dk/$1"  # This is current COP implementation
          verifyURL: true

        - source: "URL-tekst" # COP: Releateret (The text to display for the link above)
          dest: "related_url_text"

